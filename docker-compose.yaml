version: '3.8'

networks:
  cache_network:
    driver: bridge
    name: smart_thing_network

services:
  db:
    container_name: db
    image: postgres:13.3
    networks:
      cache_network:
        aliases:
          - smart_thing_network
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./docker/db/:/docker-entrypoint-initdb.d/
  app:
    container_name: smart-thing-cloud
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      cache_network:
        aliases:
          - smart_thing_network
    depends_on:
      - db
      - rabbitmq
    ports:
      - 8080:8080
    environment:
      ADMIN_LOGIN: ${ADMIN_LOGIN}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_HIBERNATE_SHOW_SQL: false
      BROKER_HOST: rabbitmq
      BROKER_USER: ${BROKER_USER}
      BROKER_PASSWORD: ${BROKER_PASSWORD}
      REDIS_HOST: token-cache
      REDIS_PORT: ${REDIS_PORT}
      JWT_TOKEN_TTL: 3600
      REQUESTS_LIMIT: 10
  rabbitmq:
    container_name: rabbitmq
    build:
      context: ./docker/rabbitmq
      dockerfile: Dockerfile
    networks:
      cache_network:
        aliases:
          - smart_thing_network
    hostname: rabbitmq
    volumes:
      #      - ./rabbitmq:/var/lib/rabbitmq
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  token-cache:
    container_name: token-cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --port ${REDIS_PORT}
    networks:
      cache_network:
        aliases:
          - smart_thing_network